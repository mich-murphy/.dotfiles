# Set modifier
set $mod Mod4

# Set font
font pango:MonoLisa Nerd Font 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Autostart
exec --no-startup-id dex --autostart --environment i3
exec_always --no-startup-id $XDG_CONFIG_HOME/polybar/launch.sh # Launch polybar
exec_always --no-startup-id autotiling # BSPWM like tiling
exec --no-startup-id picom --experimental-backends --config $XDG_CONFIG_HOME/picom/picom.conf -b # Picom compositor
exec --no-startup-id pulseaudio --start
exec --no-startup-id redshift -l -38.14711:144.36069 & # Reduce blue light at night
exec --no-startup-id $XDG_CONFIG_HOME/local/bin/feh-blur.sh -d # Blur wallpaper
exec_always --no-startup-id greenclip daemon # Clipboard management for rofi
exec --no-startup-id feh --bg-fill $HOME/Pictures/wallpapers/wallpaper.jpg # Set wallpaper
exec --no-startup-id dunst --config $XDG_CONFIG_HOME/dunst/dunstrc # Notifications
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork --> don't think this is needed
# exec --no-startup-id nm-applet # NetworkManager applet --> don't think this is needed
# set $refresh_i3status killall -SIGUSR1 i3status --> don't think this is needed

# start a terminal
bindsym $mod+Return exec kitty 

# Rofi settings
bindsym $mod+d exec "rofi -modi drun,run -show drun"
bindsym $mod+Shift+Escape exec rofi -show power-menu -modi power-menu:rofi-power-menu
bindsym $mod+c exec rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

# App shortcuts
bindsym $mod+b exec /usr/bin/brave
bindsym $mod+v exec kitty -e nvim
bindsym $mod+Shift+Return exec kitty -e ranger

# Config file shortcuts
bindsym Mod1+1 exec kitty -e nvim $XDG_CONFIG_HOME/i3/config
bindsym Mod1+2 exec kitty -e nvim $XDG_CONFIG_HOME/nvim/init.vim
bindsym Mod1+3 exec kitty -e nvim $XDG_CONFIG_HOME/zsh/.zshrc
bindsym Mod1+4 exec kitty -e nvim $XDG_CONFIG_HOME/zsh/aliases

# Change volume
bindsym XF86AudioRaiseVolume exec $XDG_CONFIG_HOME/local/bin/changevolume.sh up
bindsym XF86AudioLowerVolume exec $XDG_CONFIG_HOME/local/bin/changevolume.sh down
bindsym XF86AudioMute exec $XDG_CONFIG_HOME/local/bin/changevolume.sh mute 
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Change brightness
bindsym XF86MonBrightnessDown exec $XDG_CONFIG_HOME/local/bin/changebrightness.sh down 
bindsym XF86MonBrightnessUp exec $XDG_CONFIG_HOME/local/bin/changebrightness.sh up 

# kill focused window
bindsym $mod+Shift+q kill

# Lockscreen
set $i3lockwall sh $XDG_CONFIG_HOME/local/bin/lock.sh # Lockscreen script
bindsym $mod+Escape exec --no-startup-id $i3lockwall

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Shift+v split h

# split in vertical orientation
bindsym $mod+Shift+g split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+w layout tabbed
bindsym $mod+Shift+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws0 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# enable switching between current and previous workspace by repressing same button
workspace_auto_back_and_forth yes

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# assign applications to specific workspaces (xprop | grep WM_CLASS)
#assign [class="Brave-browser" instance="brave-browser"] $ws2

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# floating pop up automatically
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [class="Arandr"] floating enable

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# focus switches when mouse moves over window
focus_follows_mouse no

# DESIGN
set $foreground #D9E0EE
set $background #1E1E2E
set $black1 #6E6C7E
set $black2 #988BA2
set $red #F28FAD
set $green #ABE9B3
set $yellow #FAE3B0
set $blue #96CDFB
set $magenta #F5C2E7
set $cyan #89DCEB
set $white #D9E0EE

# class                     border          background      text            indicator       child_border
client.focused              $background     $yellow         $background     $yellow 
# client.focused_inactive   $background     $background     $foreground     $background
client.unfocused            $background     $background     $foreground     $background
# client.urgent             $red            $black1         $white          $yellow
# client.placeholder        $black1         $black1         $white          $cyan

# enable gaps between windows
for_window [class=".*"] border pixel 2
gaps inner 20
gaps top 43
# gaps outer 10
# gaps bottom 43
